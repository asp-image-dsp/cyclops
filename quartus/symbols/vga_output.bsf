/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 2020  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 16 16 320 192)
	(text "vga_output" (rect 5 0 49 12)(font "Arial" ))
	(text "inst" (rect 8 160 20 172)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "clock" (rect 0 0 20 12)(font "Arial" ))
		(text "clock" (rect 21 27 41 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 1))
	)
	(port
		(pt 0 48)
		(input)
		(text "data_in[word_width-1..0]" (rect 0 0 93 12)(font "Arial" ))
		(text "data_in[word_width-1..0]" (rect 21 43 114 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 3))
	)
	(port
		(pt 304 32)
		(output)
		(text "vsync" (rect 0 0 25 12)(font "Arial" ))
		(text "vsync" (rect 258 27 283 39)(font "Arial" ))
		(line (pt 304 32)(pt 288 32)(line_width 1))
	)
	(port
		(pt 304 48)
		(output)
		(text "hsync" (rect 0 0 24 12)(font "Arial" ))
		(text "hsync" (rect 259 43 283 55)(font "Arial" ))
		(line (pt 304 48)(pt 288 48)(line_width 1))
	)
	(port
		(pt 304 64)
		(output)
		(text "r[word_width-1..0]" (rect 0 0 68 12)(font "Arial" ))
		(text "r[word_width-1..0]" (rect 215 59 283 71)(font "Arial" ))
		(line (pt 304 64)(pt 288 64)(line_width 3))
	)
	(port
		(pt 304 80)
		(output)
		(text "g[word_width-1..0]" (rect 0 0 69 12)(font "Arial" ))
		(text "g[word_width-1..0]" (rect 214 75 283 87)(font "Arial" ))
		(line (pt 304 80)(pt 288 80)(line_width 3))
	)
	(port
		(pt 304 96)
		(output)
		(text "b[word_width-1..0]" (rect 0 0 69 12)(font "Arial" ))
		(text "b[word_width-1..0]" (rect 214 91 283 103)(font "Arial" ))
		(line (pt 304 96)(pt 288 96)(line_width 3))
	)
	(port
		(pt 304 112)
		(output)
		(text "address[address_width-1..0]" (rect 0 0 109 12)(font "Arial" ))
		(text "address[address_width-1..0]" (rect 174 107 283 119)(font "Arial" ))
		(line (pt 304 112)(pt 288 112)(line_width 3))
	)
	(port
		(pt 304 128)
		(output)
		(text "mem_clk" (rect 0 0 37 12)(font "Arial" ))
		(text "mem_clk" (rect 246 123 283 135)(font "Arial" ))
		(line (pt 304 128)(pt 288 128)(line_width 1))
	)
	(parameter
		"word_width"
		"1"
		""
		(type "PARAMETER_SIGNED_DEC")	)
	(parameter
		"address_width"
		"8"
		""
		(type "PARAMETER_SIGNED_DEC")	)
	(drawing
		(rectangle (rect 16 16 288 160)(line_width 1))
	)
	(annotation_block (parameter)(rect 320 -64 420 16))
)
